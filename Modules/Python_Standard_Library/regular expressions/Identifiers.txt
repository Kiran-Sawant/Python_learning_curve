Using Regular expressions is  a way of finding text patterns. We are not searching for specific key words but rather patterns of those charecters.
The pattern is described using the syntax of regular expression. The elements of these syntax are given bellow.
Press Ctrl+F in any text editor to invoke search bar, select regular expression and start typing the expression.

Identifiers:
\d any number
\D anything but a number
\s Space
\S anything but a Space
\w any charecter (A to Z, a to z, 0 to 9 & _)
\W anything but a charecter
.  any charecter, except a newline
\b whitespace around words
\B NOT whitespace
\. a fullstop

Modifiers:

{x} expecting 'x' amount
{1,3} we're expecting 1 to 3 (\d{1,3}: 1 to 3 digit number)
+ Match 1 or more
? Match 0 or 1  (there can be 0 or 1 character)
* Match 0 or more
$ match the end of the string
^ matching the beginning of a string
| either or (\d{1-3} | \w{1-5})
() group eg. (\d{1-3} | \w{1-5})
[] range or "variance", characterset. if u put - at the start or end it is a part of set else it is range. (1-5 is range, -&<> is characterset)

White space charecters:

\n newline
\s space
\t tab
\e escape
\f form feed
\r return

Don't Forget!
. + * ? [ ] $ ^ ( ) { } | \


############## Corey's #############


.       - Any Character Except New Line
\d      - Digit (0-9)
\D      - Not a Digit (0-9)
\w      - Word Character (a-z, A-Z, 0-9, _)
\W      - Not a Word Character
\s      - Whitespace (space, tab, newline)
\S      - Not Whitespace (space, tab, newline)

\b      - Word Boundary
\B      - Not a Word Boundary
^       - Beginning of a String
$       - End of a String

[]      - Matches Characters in brackets
[^ ]    - Matches Characters NOT in brackets
|       - Either Or
( )     - Group

Quantifiers:
*       - 0 or More
+       - 1 or More
?       - 0 or One
{3}     - Exact Number
{3,4}   - Range of Numbers (Minimum, Maximum)


#### Sample Regexs ####

[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+
